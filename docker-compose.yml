version: '3.8'

services:
  # MySQL Member
  mysql-member:
    image: mysql:8.0
    container_name: mysql-member
    environment:
      MYSQL_ROOT_PASSWORD: dydrkfl11!
      MYSQL_DATABASE: gitfolio_member
    ports:
      - "3306:3306"
    volumes:
      - mysql-data1:/var/lib/mysql
    networks:
      - backend

  # MySQL Resume
  mysql-resume:
    image: mysql:8.0
    container_name: mysql-resume
    environment:
      MYSQL_ROOT_PASSWORD: dydrkfl11!
      MYSQL_DATABASE: gitfolio_resume
    ports:
      - "3307:3306"  # 다른 포트 설정
    volumes:
      - mysql-data2:/var/lib/mysql
    networks:
      - backend

  # MySQL Payment
  mysql-payment:
    image: mysql:8.0
    container_name: mysql-payment
    environment:
      MYSQL_ROOT_PASSWORD: dydrkfl11!
      MYSQL_DATABASE: gitfolio_payment
    ports:
      - "3308:3306"  # 다른 포트 설정
    volumes:
      - mysql-data3:/var/lib/mysql
    networks:
      - backend

  # MySQL Notification
  mysql-notification:
    image: mysql:8.0
    container_name: mysql-notification
    environment:
      MYSQL_ROOT_PASSWORD: dydrkfl11!
      MYSQL_DATABASE: gitfolio_notification
    ports:
      - "3309:3306"  # 다른 포트 설정
    volumes:
      - mysql-data4:/var/lib/mysql
    networks:
      - backend

  # MongoDB-MemberAdditionalInfo
  mongo-member:
    image: mongo:5.0
    container_name: mongo-member
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: gitfolio_member
    volumes:
      - mongo-data1:/data/db
    networks:
      - backend

  # MongoDB-Resume
  mongo-resume:
    image: mongo:5.0
    container_name: mongo-resume
    ports:
      - "27018:27017"  # 다른 포트 설정
    environment:
      MONGO_INITDB_DATABASE: gitfolio_resume
    volumes:
      - mongo-data2:/data/db
    networks:
      - backend

  # MongoDB-Chat
  mongo-chat:
    image: mongo:5.0
    container_name: mongo-chat
    ports:
      - "27019:27017"  # 다른 포트 설정
    environment:
      MONGO_INITDB_DATABASE: gitfolio_chat
    volumes:
      - mongo-data3:/data/db
    networks:
      - backend

  # Redis-Auth
  redis-auth:
    image: redis:alpine
    container_name: redis-auth
    ports:
      - "6379:6379"
    networks:
      - backend

  # Redis-resume(조회수)
  redis-resume:
    image: redis:alpine
    container_name: redis-resume
    ports:
      - "6378:6379"  # 다른 포트 설정
    networks:
      - backend

  # Zookeeper(Kafka용)
  zookeeper:
    image: zookeeper:3.6
    ports:
      - "2181:2181"
    networks:
      - backend

  # Kafka Broker1
  kafka1:
    image: confluentinc/cp-kafka:7.4.0
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: LISTENER_DOCKER://0.0.0.0:29092,LISTENER_EXTERNAL://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER://kafka1:29092,LISTENER_EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER:PLAINTEXT,LISTENER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - backend

  # Kafka UI
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8989:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka1:29092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  mysql-data1:
    driver: local
  mysql-data2:
    driver: local
  mysql-data3:
    driver: local
  mysql-data4:
    driver: local
  mongo-data1:
    driver: local
  mongo-data2:
    driver: local
  mongo-data3:
    driver: local