name: Test CI/CD Pipeline

on:
  push:
    branches:
      - develop

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - module: gitfolio-auth
            port: 8080
            service_name: auth
          - module: gitfolio-member
            port: 8081
            service_name: member
          - module: gitfolio-payment
            port: 8083
            service_name: payment
          - module: gitfolio-resume
            port: 8082
            service_name: resume
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Create env file
        run: |
          echo "${{ secrets.ENV_TEST }}" > .env.test

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME_TEST }}
          password: ${{ secrets.DOCKERHUB_PASSWORD_TEST }}

      - name: Build and push service image
        uses: docker/build-push-action@v4
        with:
          context: ./${{ matrix.module }}
          file: ./${{ matrix.module }}/dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME_TEST }}/gitfolio_${{ matrix.service_name }}:test
          build-args: |
            BUILDER_IMAGE=${{ secrets.DOCKERHUB_USERNAME_TEST }}/gitfolio_builder:test

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to EC2
        run: |
          # 환경변수 파일 생성
          echo "${{ secrets.ENV_TEST }}" > .env.test
          
          # SSH 키 파일 생성
          echo "${{ secrets.EC2_SSH_KEY_TEST }}" > ssh_key.pem
          chmod 600 ssh_key.pem
          
          # EC2에 환경변수 파일 전송
          scp -i ssh_key.pem -o StrictHostKeyChecking=no .env.test ${EC2_USER_TEST}@${EC2_HOST_TEST}:~/.env.test
          
          # 배포 스크립트 실행
          ssh -i ssh_key.pem -o StrictHostKeyChecking=no ${EC2_USER_TEST}@${EC2_HOST_TEST} '
            source ~/.env.test
          
            # Docker Login
            docker login -u ${DOCKERHUB_USERNAME_TEST} -p ${DOCKERHUB_PASSWORD_TEST}
          
            for service in auth member payment resume; do
              docker pull ${DOCKERHUB_USERNAME_TEST}/gitfolio_${service}:test
              docker stop gitfolio_${service}_test || true
              docker rm gitfolio_${service}_test || true
              docker run -d \
                --name gitfolio_${service}_test \
                --env-file ~/.env.test \
                -p $(eval echo \$${service^^}_SERVER_PORT):8080 \
                ${DOCKERHUB_USERNAME_TEST}/gitfolio_${service}:test
            done
          '