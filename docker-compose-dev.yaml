#services:
#  builder:
#    platform: linux/amd64
#    build:
#      context: ./
#      dockerfile: dockerfile
#      target: builder
#    volumes:
#      - gradle-cache:/root/.gradle
#      - build-output:/gitfolio_back/build
#    image: aida0/gitfolio_builder:test
#    profiles:
#      - build

# 1번 모듈
services:
  auth:
    platform: linux/amd64
    image: 727646500036.dkr.ecr.ap-northeast-2.amazonaws.com/gitfolio/auth:dev
    container_name: gitfolio_auth
    ports:
      - target: 8080
        published: 80
        protocol: tcp
      - target: 8080
        published: 443
        protocol: tcp
    networks:
      - back
  member:
    platform: linux/amd64
    image: 727646500036.dkr.ecr.ap-northeast-2.amazonaws.com/gitfolio/member:dev
    container_name: gitfolio_member
    ports:
      - target: 8080
        published: 81
        protocol: tcp
      - target: 8080
        published: 444
        protocol: tcp
    networks:
      - back
networks:
  back:
    driver: bridge
    attachable: true

#2번 모듈
services:
  resume:
    platform: linux/amd64
    image: 727646500036.dkr.ecr.ap-northeast-2.amazonaws.com/gitfolio/resume:dev
    container_name: gitfolio_resume
    ports:
      - target: 8080
        published: 80
        protocol: tcp
      - target: 8080
        published: 443
        protocol: tcp
    networks:
      - back
  payment:
    platform: linux/amd64
    image: 727646500036.dkr.ecr.ap-northeast-2.amazonaws.com/gitfolio/payment:dev
    container_name: gitfolio_payment
    ports:
      - target: 8080
        published: 81
        protocol: tcp
      - target: 8080
        published: 444
        protocol: tcp
    networks:
      - back
networks:
  back:
    driver: overlay
    attachable: true

#3번모듈
services:
  notification:
    platform: linux/amd64
    image: 727646500036.dkr.ecr.ap-northeast-2.amazonaws.com/gitfolio/notification:dev
    container_name: gitfolio_notification
    ports:
      - target: 8080
        published: 80
        protocol: tcp
      - target: 8080
        published: 443
        protocol: tcp
    networks:
      - back

  zookeeper:
    platform: linux/amd64
    image: zookeeper:3.6
    container_name: gitfolio_zookeeper
    ports:
      - target: 2181
        published: 2181
        protocol: tcp
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
    networks:
      - back

  kafka:
    platform: linux/amd64
    image: confluentinc/cp-kafka:7.4.0
    container_name: gitfolio_kafka
    ports:
      - target: 9092
        published: 9092
        protocol: tcp
      - target: 29092
        published: 29092
        protocol: tcp
        # environment: 섹션이 있다면 제거하거나 주석처리
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: LISTENER_DOCKER://0.0.0.0:29092,LISTENER_EXTERNAL://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER://localhost:29092,LISTENER_EXTERNAL://10.0.105.99:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER:PLAINTEXT,LISTENER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

    depends_on:
      - zookeeper
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - back

volumes:
  zookeeper_data:
  kafka_data:

networks:
  back:
    driver: overlay
    attachable: true